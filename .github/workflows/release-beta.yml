name: Release (Beta)
  push: 
    branches: 
      - beta

on:
  push:
    branches:
      - beta
  workflow_dispatch:

jobs:
  release:
    name: semantic-release/github
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
      new-release-channel: ${{ steps.semantic-release.outputs.new_release_channel }}
    steps:
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4



  goreleaser:
    name: GoReleaser
    needs:
      - release
    if: needs.release.outputs.new-release-published == 'true'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: '@semantic-release/github' plugin
        run: npx semantic-release@^17
          cache: true

      - uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: ~> 1
          args: release --clean

          BREWTAP_TOKEN: ${{ secrets.GH_PAT }}
          SCOOP_TOKEN: ${{ secrets.GH_PAT }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - run: gh release edit v${{ needs.release.outputs.new-release-version }} --draft=false --prerelease


  publish:
    name: Publish NPM
    needs:
      - release
      - goreleaser
    if: needs.release.outputs.new-release-published == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm --git-tag-version=false version ${{ needs.release.outputs.new-release-version }}
      - run: npm publish --tag ${{ needs.release.outputs.new-release-channel }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
